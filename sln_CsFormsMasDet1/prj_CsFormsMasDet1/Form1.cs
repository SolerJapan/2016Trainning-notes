using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Entity;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace prj_CsFormsMasDet1
{
    public partial class Form1 : Form
    {
        // fields
        private tDbcxt m_oDbcxt = null;

        public Form1()
        {
            InitializeComponent();
        }

        private void Form1_Load(object sender, EventArgs e)
        {
            this.m_oDbcxt = new tDbcxt();

            // load data from database into dbcontext's categories dbset
            this.m_oDbcxt.Categories.Load();

            // binds all unchanged, modified, added Category objs tracked by DbContext
            // DbSet.Local prop returns ObservableCollection<T>
            // ObservableCollection<T>.ToBindingList() returns BindingList<T>
            // BindingList<T> allows 2way binding
            // WinForms use DbSet.Local.ToBindingList()
            // WebForms use DbSet.Local.ToList()
            // WPF can  use DbSet.Local
            this.categoryBindingSource.DataSource = this.m_oDbcxt.Categories.Local.ToBindingList();
        }

        private void categoryBindingNavigatorSaveItem_Click(object sender, EventArgs e)
        {
            // ends edit mode, accepts changes if valid
            this.Validate();

            // EF doesn’t mark entities removed from a navprop (here is products) as deleted in the db context
            // it only removes navprop obj's relationship by setting its parent ref to null
            // so mark products that do not have a Category ref as deleted
            // ToList() makes copy to allow original to be modified by Remove() while copy is being enumerated
            foreach (Product oProd in this.m_oDbcxt.Products.Local.ToList())
            {
                if (oProd.Category == null)
                {
                    this.m_oDbcxt.Products.Remove(oProd);
                }
            }

            // save changes to database
            this.m_oDbcxt.SaveChanges();

            // refresh controls to show identity values generated by database
            this.categoryDataGridView.Refresh();
            this.productsDataGridView.Refresh();
        }

        protected override void OnClosing(CancelEventArgs e)
        {
            base.OnClosing(e);
            this.m_oDbcxt.Dispose();
        }
    }
}
