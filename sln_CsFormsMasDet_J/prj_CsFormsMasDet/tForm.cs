using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

using System.Data.Entity;  // Load(), ToBindingList()


namespace prj_CsFormsMasDet
{
  public partial class tForm : Form
  {
    // fields
    private tDbcxt m_oDbcxt = null;


    // ctor (default)
    public tForm()
    {
      this.InitializeComponent();
    }


    // event handler
    private void tForm_Load( object sender, EventArgs e )
    {
      this.m_oDbcxt = new tDbcxt();

      // load data from database into dbcontext's categories dbset
      this.m_oDbcxt.Categories.Load();

      // binds all unchanged, modified, added Category objs tracked by DbContext
      // DbSet.Local prop returns ObservableCollection<T>
      // ObservableCollection<T>.ToBindingList() returns BindingList<T>
      // BindingList<T> allows 2way binding to controls on a form
      // WinForms use DbSet.Local.ToBindingList()
      // WebForms use DbSet.Local.ToList()
      // WPF can  use DbSet.Local
      this.categoryBindingSource.DataSource = this.m_oDbcxt.Categories.Local.ToBindingList();

    }


    // event handler
    private void categoryBindingNavigatorSaveItem_Click( object sender, EventArgs e )
    {
      // ends edit mode, accepts changes if valid
      this.Validate();

      // EF doesn’t mark entities removed from a navprop as deleted in the context
      // it only removes obj's relationship by setting its parent ref to null
      // so mark products that do not have a Category ref as deleted
      // ToList() makes copy to allow original to be modified by Remove() while copy is being enumerated
      foreach( Product oProd in this.m_oDbcxt.Products.Local.ToList() )
      {
        if( oProd.Category == null )
        {
          this.m_oDbcxt.Products.Remove( oProd );
        }
      }

      // save changes to database
      this.m_oDbcxt.SaveChanges();

      // refresh controls to show values generated by database
      this.categoryDataGridView.Refresh();
      this.productsDataGridView.Refresh();
    }


    // event handler
    protected override void OnClosing( CancelEventArgs e )
    {
      base.OnClosing( e );
      this.m_oDbcxt.Dispose();
    }


  } // class

} // ns
